{"version":3,"sources":["app-extractor.js"],"names":[],"mappings":";;;sBAOI,OAAO,EAEE,YAAY;;;;;;;;;;;;;AAFrB,aAAO,GAAG,MAAM,CAAC,OAAO;;AAEf,kBAAY;AAKZ,iBALA,YAAY,CAKX,OAAO,EAAC;gCALT,YAAY;;AAOrB,gBAAM,CAAC,MAAM,CAAC;AACZ,qBAAS,EAAE,IAAI;AACf,wBAAY,EAAE,OAAO;AACrB,0BAAc,EAAE;AACd,qBAAO,EAAE,CAAC;aACX;AACD,mBAAO,EAAC;AACN,iBAAG,EAAE,OAAO,GAAC,OAAO;aACrB;WACF,CAAC,CAAC;SACJ;;qBAjBU,YAAY;;iBA0BP,0BAAC,QAAQ,EAAC;AACxB,gBAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEpC,mBAAO,MAAM,UAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,EAAE;AACrC,kBAAI,SAAS,GAAG,EAAE,CAAC;AACnB,mBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;AAC7C,oBAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACxB,oBAAG,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;eACrC;AACD,qBAAO,SAAS,CAAC;aAClB,CAAC,CAAC;WACJ;;;eArCU,YAAY;;;8BAAZ,YAAY","file":"app-extractor.js","sourcesContent":["import System from \"systemjs\";\r\n\r\n//import \"config\";\r\nimport \"babel/polyfill\";\r\nimport \"core-js\";\r\n\r\nimport corejs from \"core-js\";\r\nvar Promise = corejs.Promise;\r\n\r\nexport class AppExtractor{\r\n\r\n  /**\r\n   * Configure systemjs to work with the local application\r\n   */\r\n  constructor(appPath){\r\n    //prepare for use in windows\r\n    System.config({\r\n      \"baseURL\": \"./\",\r\n      \"transpiler\": 'babel',\r\n      \"babelOptions\": {\r\n        \"stage\": 0\r\n      },\r\n      \"paths\":{\r\n        \"*\": appPath+\"/*.js\"\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the routes from a module.\r\n   * The module should export the routes array as a variable.\r\n   *\r\n   * @param moduleId    id of the module to load.\r\n   * @returns {Promise}\r\n   */\r\n  getNavFromRoutes(moduleId){\r\n    if(!moduleId) Promise.resolve(null);\r\n    //get routes from the aurelia application\r\n    return System.import(moduleId).then(m=>{\r\n      var navRoutes = [];\r\n      for(var i = 0, l = m.routes.length; i < l; i++){\r\n        var route = m.routes[i];\r\n        if(route.nav) navRoutes.push(route);\r\n      }\r\n      return navRoutes;\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}